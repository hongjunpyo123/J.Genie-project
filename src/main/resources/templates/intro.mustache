<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta property="og:title" content="기업별 맞춤 자기소개서 JGenie!">
    <meta property="og:description" content="개인의 경험에 기반한 기업별 맞춤형 자기소개서를 작성합니다!">
    <meta property="og:image" content="http://jgenie.site/images/preview.png">
    <meta property="og:url" content="https://jgenie.site">
    <meta property="og:type" content="website">
    <title>JGenie</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><circle cx='50' cy='50' r='50' fill='%23667eea'/><text x='50' y='58' font-family='Arial,sans-serif' font-size='16' font-weight='bold' fill='white' text-anchor='middle'>JGenie</text></svg>" type="image/svg+xml">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
        }

        /* 배경 파티클 효과 */
        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }

        .particle:nth-child(1) { top: 20%; left: 10%; animation-delay: 0s; }
        .particle:nth-child(2) { top: 60%; left: 20%; animation-delay: 1s; }
        .particle:nth-child(3) { top: 40%; left: 80%; animation-delay: 2s; }
        .particle:nth-child(4) { top: 80%; left: 70%; animation-delay: 3s; }
        .particle:nth-child(5) { top: 30%; left: 50%; animation-delay: 4s; }

        @keyframes float {
            0%, 100% {
                transform: translateY(0px) rotate(0deg);
                opacity: 0.1;
            }
            50% {
                transform: translateY(-20px) rotate(180deg);
                opacity: 0.3;
            }
        }

        /* 메인 로고 컨테이너 */
        .intro-container {
            text-align: center;
            z-index: 10;
            position: relative;
        }

        /* JGenie 로고 */
        .logo-wrapper {
            position: relative;
            display: inline-block;
            margin-bottom: 32px;
        }

        .logo-text {
            font-size: 4.5rem;
            font-weight: 700;
            letter-spacing: -0.03em;
            position: relative;
            overflow: hidden;
        }

        /* 각 글자별 애니메이션 */
        .letter {
            display: inline-block;
            opacity: 0;
            transform: translateY(100px) rotateX(-90deg);
            animation: letterReveal 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
        }

        .letter:nth-child(1) { animation-delay: 0.1s; }
        .letter:nth-child(2) { animation-delay: 0.2s; }
        .letter:nth-child(3) { animation-delay: 0.3s; }
        .letter:nth-child(4) { animation-delay: 0.4s; }
        .letter:nth-child(5) { animation-delay: 0.5s; }
        .letter:nth-child(6) { animation-delay: 0.6s; }

        @keyframes letterReveal {
            0% {
                opacity: 0;
                transform: translateY(100px) rotateX(-90deg) scale(0.5);
                color: transparent;
            }
            50% {
                opacity: 0.7;
                transform: translateY(20px) rotateX(-30deg) scale(1.1);
                color: rgba(255, 255, 255, 0.8);
            }
            100% {
                opacity: 1;
                transform: translateY(0) rotateX(0deg) scale(1);
                background: linear-gradient(135deg, #ffffff, #f8fafc);
                -webkit-background-clip: text;
                background-clip: text;
                -webkit-text-fill-color: transparent;
                text-shadow: 0 4px 20px rgba(255, 255, 255, 0.3);
            }
        }

        /* 서브텍스트 */
        .subtitle {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.25rem;
            font-weight: 400;
            letter-spacing: 0.02em;
            opacity: 0;
            transform: translateY(30px);
            animation: subtitleFadeIn 1s ease-out 1.2s forwards;
            margin-bottom: 48px;
        }

        @keyframes subtitleFadeIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* 로딩 인디케이터 */
        .loading-container {
            opacity: 0;
            animation: loadingFadeIn 0.8s ease-out 1.8s forwards;
        }

        @keyframes loadingFadeIn {
            to {
                opacity: 1;
            }
        }

        .loading-dots {
            display: flex;
            justify-content: center;
            gap: 8px;
            margin-bottom: 16px;
        }

        .dot {
            width: 8px;
            height: 8px;
            background: rgba(255, 255, 255, 0.6);
            border-radius: 50%;
            animation: dotPulse 1.4s ease-in-out infinite;
        }

        .dot:nth-child(1) { animation-delay: 0s; }
        .dot:nth-child(2) { animation-delay: 0.2s; }
        .dot:nth-child(3) { animation-delay: 0.4s; }

        @keyframes dotPulse {
            0%, 60%, 100% {
                transform: scale(1);
                opacity: 0.6;
            }
            30% {
                transform: scale(1.3);
                opacity: 1;
            }
        }

        .loading-text {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.9rem;
            font-weight: 400;
            letter-spacing: 0.01em;
        }

        /* 오류 메시지 스타일 */
        .error-message {
            color: #ff6b6b;
            font-size: 0.9rem;
            font-weight: 500;
            letter-spacing: 0.01em;
            margin-bottom: 16px;
            display: none;
        }

        /* 재시도 버튼 스타일 */
        .retry-btn {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: rgba(255, 255, 255, 0.9);
            padding: 8px 16px;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            backdrop-filter: blur(10px);
            display: none;
        }

        .retry-btn:hover {
            background: rgba(255, 255, 255, 0.15);
            border-color: rgba(255, 255, 255, 0.5);
            transform: translateY(-1px);
        }

        /* 글로우 효과 */
        .logo-text::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 120%;
            height: 120%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
            transform: translate(-50%, -50%);
            opacity: 0;
            animation: glow 2s ease-in-out 1s infinite alternate;
            pointer-events: none;
            z-index: -1;
        }

        @keyframes glow {
            0% {
                opacity: 0;
                transform: translate(-50%, -50%) scale(0.8);
            }
            100% {
                opacity: 0.3;
                transform: translate(-50%, -50%) scale(1.2);
            }
        }

        /* 페이드아웃 애니메이션 */
        .fade-out {
            animation: fadeOut 0.8s ease-in-out forwards;
        }

        @keyframes fadeOut {
            to {
                opacity: 0;
                transform: scale(0.95);
            }
        }

        /* 모바일 최적화 */
        @media (max-width: 480px) {
            .logo-text {
                font-size: 3.5rem;
            }

            .subtitle {
                font-size: 1.1rem;
                margin-bottom: 40px;
            }

            .particle {
                width: 3px;
                height: 3px;
            }
        }

        @media (max-width: 320px) {
            .logo-text {
                font-size: 3rem;
            }

            .subtitle {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>
<!-- 배경 파티클 -->
<div class="particles">
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
</div>

<!-- 메인 인트로 -->
<div class="intro-container" id="introContainer">
    <div class="logo-wrapper">
        <div class="logo-text">
            <span class="letter">J</span><span class="letter">G</span><span class="letter">e</span><span class="letter">n</span><span class="letter">i</span><span class="letter">e</span>
        </div>
    </div>

    <div class="subtitle">당신만의 맞춤 자기소개서</div>

    <div class="loading-container">
        <div class="loading-dots" id="loadingDots">
            <div class="dot"></div>
            <div class="dot"></div>
            <div class="dot"></div>
        </div>
        <div class="loading-text" id="loadingText">잠시만 기다려주세요...</div>
        <div class="error-message" id="errorMessage">
            서버가 응답하지 않습니다
        </div>
        <button class="retry-btn" id="retryBtn" onclick="checkServerStatus()">
            재시도
        </button>
    </div>
</div>

<script>
    // 서버 상태 체크 함수
    async function checkServerStatus() {
        const loadingDots = document.getElementById('loadingDots');
        const loadingText = document.getElementById('loadingText');
        const errorMessage = document.getElementById('errorMessage');
        const retryBtn = document.getElementById('retryBtn');

        // 로딩 상태로 초기화
        loadingDots.style.display = 'flex';
        loadingText.style.display = 'block';
        loadingText.textContent = '잠시만 기다려주세요...';
        errorMessage.style.display = 'none';
        retryBtn.style.display = 'none';

        try {
            const controller = new AbortController();
            const timeoutId = setTimeout(() => controller.abort(), 5000); // 5초 타임아웃

            const response = await fetch('/server/status', {
                method: 'GET',
                signal: controller.signal
            });

            clearTimeout(timeoutId);

            if (response.status === 200) {
                // 서버 응답 성공 - 로그인 페이지로 이동
                proceedToLogin();
            } else {
                // 서버 응답 실패
                showServerError();
            }
        } catch (error) {
            // 네트워크 오류 또는 타임아웃
            console.error('서버 상태 체크 실패:', error);
            showServerError();
        }
    }

    // 서버 오류 표시 함수
    function showServerError() {
        const loadingDots = document.getElementById('loadingDots');
        const loadingText = document.getElementById('loadingText');
        const errorMessage = document.getElementById('errorMessage');
        const retryBtn = document.getElementById('retryBtn');

        loadingDots.style.display = 'none';
        loadingText.style.display = 'none';
        errorMessage.style.display = 'block';
        retryBtn.style.display = 'inline-block';
    }

    // 로그인 페이지로 이동하는 함수
    function proceedToLogin() {
        const introContainer = document.getElementById('introContainer');
        introContainer.classList.add('fade-out');

        setTimeout(() => {
            window.location.href = '/login';
        }, 800);
    }

    // 인트로 타이밍 관리 - 로딩 애니메이션이 끝난 후 서버 상태 체크 시작
    setTimeout(() => {
        checkServerStatus();
    }, 4500); // 로딩 인디케이터가 나타난 후 0.7초 뒤

    // 클릭하면 즉시 서버 상태 체크 후 이동
    document.addEventListener('click', () => {
        checkServerStatus();
    });

    // 키보드 입력시에도 즉시 서버 상태 체크 후 이동
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ' || e.key === 'Escape') {
            checkServerStatus();
        }
    });

    // 추가 파티클 동적 생성
    function createAdditionalParticles() {
        const particlesContainer = document.querySelector('.particles');
        const particleCount = 8;

        for (let i = 0; i < particleCount; i++) {
            const particle = document.createElement('div');
            particle.classList.add('particle');

            // 랜덤 위치 설정
            particle.style.top = Math.random() * 100 + '%';
            particle.style.left = Math.random() * 100 + '%';
            particle.style.animationDelay = Math.random() * 6 + 's';
            particle.style.animationDuration = (4 + Math.random() * 4) + 's';

            particlesContainer.appendChild(particle);
        }
    }

    // 페이지 로드 시 추가 파티클 생성
    window.addEventListener('load', createAdditionalParticles);
</script>
</body>
</html>