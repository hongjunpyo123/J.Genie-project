<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JGenie - 잘못된 요청</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 16px;
            overflow-x: hidden;
            /* 간단한 페이드인 */
            opacity: 0;
            animation: fadeIn 0.6s ease-out forwards;
        }

        @keyframes fadeIn {
            to { opacity: 1; }
        }

        .error-container {
            text-align: center;
            /* 컨테이너 애니메이션 */
            opacity: 0;
            transform: translateY(20px);
            animation: slideUp 0.7s ease-out 0.2s forwards;
            will-change: transform, opacity;
        }

        @keyframes slideUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .logo {
            margin-bottom: 40px;
            /* 로고 애니메이션 */
            opacity: 0;
            animation: fadeIn 0.5s ease-out 0.5s forwards;
        }

        .logo h1 {
            font-size: 2.4rem;
            font-weight: 700;
            color: rgba(255, 255, 255, 0.95);
            margin-bottom: 6px;
            letter-spacing: -0.02em;
            text-shadow: 0 4px 20px rgba(255, 255, 255, 0.3);
            /* 부드러운 bounce */
            animation: gentleBounce 4s ease-in-out 1.2s infinite;
            will-change: transform;
        }

        @keyframes gentleBounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-2px);
            }
            60% {
                transform: translateY(-1px);
            }
        }

        .logo p {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.85rem;
            font-weight: 400;
            letter-spacing: 0.01em;
        }

        .error-icon {
            width: 64px;
            height: 64px;
            margin: 0 auto 28px;
            background: rgba(255, 255, 255, 0.15);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(10px);
            /* 아이콘 애니메이션 */
            opacity: 0;
            transform: scale(0.5);
            animation: iconPop 0.6s ease-out 0.8s forwards;
            will-change: transform, opacity;
        }

        @keyframes iconPop {
            0% {
                opacity: 0;
                transform: scale(0.5);
            }
            70% {
                opacity: 1;
                transform: scale(1.1);
            }
            100% {
                opacity: 1;
                transform: scale(1);
            }
        }

        .error-icon::before {
            content: '!';
            color: rgba(255, 255, 255, 0.9);
            font-size: 2rem;
            font-weight: 700;
        }

        .error-title {
            color: rgba(255, 255, 255, 0.95);
            font-size: 1.4rem;
            font-weight: 600;
            margin-bottom: 16px;
            letter-spacing: -0.01em;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
            /* 제목 애니메이션 */
            opacity: 0;
            transform: translateY(15px);
            animation: textSlideIn 0.4s ease-out 1.0s forwards;
            will-change: transform, opacity;
        }

        .error-message {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.95rem;
            font-weight: 400;
            line-height: 1.5;
            margin-bottom: 36px;
            /* 메시지 애니메이션 */
            opacity: 0;
            transform: translateY(15px);
            animation: textSlideIn 0.4s ease-out 1.1s forwards;
            will-change: transform, opacity;
        }

        @keyframes textSlideIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .back-btn {
            padding: 16px 32px;
            background: rgba(255, 255, 255, 0.15);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 12px;
            color: rgba(255, 255, 255, 0.95);
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            position: relative;
            overflow: hidden;
            letter-spacing: -0.01em;
            text-decoration: none;
            display: inline-block;
            backdrop-filter: blur(10px);
            /* 버튼 애니메이션 */
            opacity: 0;
            transform: translateY(15px);
            animation: textSlideIn 0.4s ease-out 1.2s forwards;
            will-change: transform, opacity;
        }

        .back-btn:hover {
            background: rgba(255, 255, 255, 0.25);
            border-color: rgba(255, 255, 255, 0.5);
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        .back-btn:active {
            transform: translateY(0);
        }

        /* 배경 파티클 효과 - 기존과 동일 */
        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }

        .particle:nth-child(1) { top: 20%; left: 10%; animation-delay: 0s; }
        .particle:nth-child(2) { top: 60%; left: 20%; animation-delay: 1s; }
        .particle:nth-child(3) { top: 40%; left: 80%; animation-delay: 2s; }
        .particle:nth-child(4) { top: 80%; left: 70%; animation-delay: 3s; }
        .particle:nth-child(5) { top: 30%; left: 50%; animation-delay: 4s; }

        @keyframes float {
            0%, 100% {
                transform: translateY(0px) rotate(0deg);
                opacity: 0.1;
            }
            50% {
                transform: translateY(-20px) rotate(180deg);
                opacity: 0.3;
            }
        }

        /* 애니메이션 완료 후 will-change 제거 */
        .error-container.loaded,
        .error-icon.loaded,
        .error-title.loaded,
        .error-message.loaded,
        .back-btn.loaded {
            will-change: auto;
        }

        /* 모바일 최적화 */
        @media (max-width: 480px) {
            .logo h1 {
                font-size: 2.2rem;
            }

            .logo {
                margin-bottom: 28px;
            }

            .error-icon {
                width: 60px;
                height: 60px;
                margin-bottom: 24px;
            }

            .error-icon::before {
                font-size: 1.8rem;
            }

            .error-title {
                font-size: 1.3rem;
                margin-bottom: 14px;
            }

            .error-message {
                font-size: 0.9rem;
                margin-bottom: 32px;
            }

            .back-btn {
                padding: 15px 28px;
                font-size: 0.95rem;
            }

            .particle {
                width: 3px;
                height: 3px;
            }
        }

        @media (max-width: 320px) {
            .logo h1 {
                font-size: 2rem;
            }

            .error-title {
                font-size: 1.2rem;
            }

            .error-message {
                font-size: 0.85rem;
            }

            .back-btn {
                padding: 14px 24px;
                font-size: 0.9rem;
            }
        }

        /* 저사양 기기 대응 */
        @media (prefers-reduced-motion: reduce) {
            *, *::before, *::after {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }
    </style>
</head>
<body>
<!-- 배경 파티클 -->
<div class="particles">
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
</div>

<div class="error-container">
    <div class="logo">
        <h1>JGenie</h1>
        <p>당신만의 맞춤 자기소개서</p>
    </div>

    <div class="error-icon"></div>

    <h2 class="error-title">페이지를 찾을 수 없습니다</h2>

    <p class="error-message">
        요청하신 페이지가 존재하지 않습니다
    </p>

    <a href="/" class="back-btn">처음으로 돌아가기</a>
</div>

<script>
    // 애니메이션 최적화 - will-change 제거
    setTimeout(() => {
        document.querySelector('.error-container').classList.add('loaded');
        document.querySelector('.error-icon').classList.add('loaded');
        document.querySelector('.error-title').classList.add('loaded');
        document.querySelector('.error-message').classList.add('loaded');
        document.querySelector('.back-btn').classList.add('loaded');
    }, 1500);

    // 버튼 클릭 애니메이션
    const backBtn = document.querySelector('.back-btn');

    backBtn.addEventListener('click', function(e) {
        // 클릭 효과
        this.style.transform = 'scale(0.98)';
        setTimeout(() => {
            this.style.transform = '';
        }, 100);
    });

    // 추가 파티클 동적 생성
    function createAdditionalParticles() {
        const particlesContainer = document.querySelector('.particles');
        const particleCount = 6;

        for (let i = 0; i < particleCount; i++) {
            const particle = document.createElement('div');
            particle.classList.add('particle');

            // 랜덤 위치 설정
            particle.style.top = Math.random() * 100 + '%';
            particle.style.left = Math.random() * 100 + '%';
            particle.style.animationDelay = Math.random() * 6 + 's';
            particle.style.animationDuration = (4 + Math.random() * 4) + 's';

            particlesContainer.appendChild(particle);
        }
    }

    // 페이지 로드 시 추가 파티클 생성
    window.addEventListener('load', createAdditionalParticles);

    // 키보드 접근성
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
            if (document.activeElement === backBtn) {
                window.location.href = '/';
            }
        }
    });
</script>
</body>
</html>