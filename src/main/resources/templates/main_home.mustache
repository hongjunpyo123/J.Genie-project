<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, viewport-fit=cover">
    <title>JGenie - 홈</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            -webkit-tap-highlight-color: transparent;
        }

        body {
            font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            min-height: 100dvh;
            max-height: 100vh;
            max-height: 100dvh;
            overflow-x: hidden;
            overflow-y: hidden;
            padding-bottom: 0;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* 메인 컨테이너 */
        .main-container {
            padding: 16px;
            max-width: 100%;
            width: 100%;
            margin: 0 auto;
            height: calc(100vh - 70px);
            height: calc(100dvh - 70px);
            overflow-x: hidden; /* 추가 */
            overflow-y: auto;
            box-sizing: border-box;
            opacity: 0;
            animation: fadeInUp 0.8s ease-out forwards;
        }

        /* 헤더 영역 */
        .header {
            margin-bottom: clamp(20px, 5vw, 40px);
            padding-top: 8px;
            padding-top: max(8px, env(safe-area-inset-top));
        }

        .logo {
            font-size: clamp(1.3rem, 4vw, 1.5rem);
            font-weight: 700;
            color: rgba(255, 255, 255, 0.95);
            letter-spacing: -0.02em;
            margin-bottom: 6px;
            text-shadow: 0 2px 10px rgba(255, 255, 255, 0.2);
        }

        .welcome-text {
            color: rgba(255, 255, 255, 0.8);
            font-size: clamp(0.8rem, 3vw, 0.9rem);
            font-weight: 400;
            line-height: 1.4;
            letter-spacing: -0.01em;
        }

        /* 기업 목록 섹션 */
        .companies-section {
            margin-bottom: clamp(24px, 6vw, 48px);
            position: relative;
            padding: 20px 0;
            overflow: hidden;
            margin-left: -16px; /* 추가 */
            margin-right: -16px; /* 추가 */
            padding-left: 16px; /* 추가 */
            padding-right: 16px; /* 추가 */
        }

        .companies-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0; /* 기존: left: -50vw; */
            right: 0; /* 기존: right: -50vw; */
            bottom: 0;
            background: rgba(255, 255, 255, 0.03);
            border-top: 1px solid rgba(255, 255, 255, 0.08);
            border-bottom: 1px solid rgba(255, 255, 255, 0.08);
            backdrop-filter: blur(5px);
            z-index: -1;
        }

        .section-title {
            color: rgba(255, 255, 255, 0.95);
            font-size: clamp(0.8rem, 3vw, 0.9rem);
            font-weight: 600;
            margin-bottom: 12px;
            letter-spacing: -0.01em;
        }

        .companies-grid {
            position: relative;
            height: 180px;
            overflow: hidden;
            margin: 0 -16px;
            width: calc(100% + 32px); /* 양쪽 16px씩 추가 */
        }

        .companies-container {
            display: flex;
            flex-direction: column;
            gap: 12px;
            padding: 0 16px;
            will-change: transform;
            width: fit-content;
            min-width: 100%;
        }

        .companies-container.scrolling {
            animation: infiniteFlow 60s linear infinite;
        }

        @keyframes infiniteFlow {
            0% { transform: translateX(0); }
            100% { transform: translateX(-50%); }
        }

        .companies-container.paused {
            animation-play-state: paused;
        }

        .company-row {
            display: flex;
            gap: 12px;
            min-width: 100%;
            width: fit-content;
        }

        .company-item {
            flex: 0 0 clamp(70px, 20vw, 85px);
            height: clamp(70px, 20vw, 85px);
            background: rgba(255, 255, 255, 0.12);
            border: 1px solid rgba(255, 255, 255, 0.15);
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(10px);
            transition: all 0.2s ease;
            cursor: pointer;
            overflow: hidden;
            touch-action: manipulation;
        }

        .company-item:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.3);
            transform: translateY(-1px);
        }

        .company-item:active {
            transform: scale(0.98);
        }

        .company-placeholder {
            font-size: clamp(0.7rem, 3vw, 0.8rem);
            font-weight: 600;
            color: rgba(255, 255, 255, 0.85);
            letter-spacing: -0.01em;
            text-align: center;
            line-height: 1.2;
            padding: 6px;
            word-break: keep-all;
        }

        /* AI 분석 섹션 */
        .analysis-section {
            margin-bottom: clamp(10px, 3vw, 20px);
        }

        .analysis-card {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.15);
            border-radius: 16px;
            padding: clamp(16px, 4vw, 20px);
            backdrop-filter: blur(15px);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        .analysis-header {
            margin-bottom: 12px;
            position: relative;
        }

        .analysis-title {
            color: rgba(255, 255, 255, 0.95);
            font-size: clamp(0.8rem, 3vw, 0.9rem);
            font-weight: 600;
            letter-spacing: -0.01em;
            margin-bottom: 4px;
        }

        .analysis-subtitle {
            color: rgba(255, 255, 255, 0.7);
            font-size: clamp(0.7rem, 2.5vw, 0.75rem);
            font-weight: 400;
        }

        .analysis-placeholder {
            text-align: center;
            padding: 16px;
        }

        .analysis-placeholder-text {
            color: rgba(255, 255, 255, 0.7);
            font-size: clamp(0.75rem, 3vw, 0.8rem);
            line-height: 1.5;
            letter-spacing: -0.01em;
        }

        /* 로딩 상태 */
        .analysis-loading {
            display: none;
            text-align: center;
            padding: 16px;
        }

        .analysis-loading.show {
            display: block;
        }

        .analysis-loading-spinner {
            width: clamp(30px, 8vw, 40px);
            height: clamp(30px, 8vw, 40px);
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-top: 2px solid rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 12px;
        }

        .analysis-loading-text {
            color: rgba(255, 255, 255, 0.8);
            font-size: clamp(0.75rem, 3vw, 0.8rem);
            font-weight: 500;
        }

        /* 분석 결과 표시 */
        .analysis-result {
            display: none;
        }

        .analysis-result.show {
            display: block;
        }

        .analysis-score {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 16px;
        }

        .score-circle {
            position: relative;
            width: clamp(60px, 15vw, 80px);
            height: clamp(60px, 15vw, 80px);
            border-radius: 50%;
            background: conic-gradient(from 0deg, rgba(255, 255, 255, 0.3) 0deg, rgba(255, 255, 255, 0.3) var(--progress), rgba(255, 255, 255, 0.1) var(--progress), rgba(255, 255, 255, 0.1) 360deg);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .score-circle::before {
            content: '';
            position: absolute;
            width: calc(100% - 8px);
            height: calc(100% - 8px);
            border-radius: 50%;
            background: rgba(102, 126, 234, 0.8);
            backdrop-filter: blur(10px);
        }

        .score-value {
            position: relative;
            z-index: 1;
            font-size: clamp(1.2rem, 4vw, 1.5rem);
            font-weight: 700;
            color: white;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }

        .analysis-message {
            color: rgba(255, 255, 255, 0.9);
            font-size: clamp(0.8rem, 3vw, 0.85rem);
            line-height: 1.5;
            text-align: left;
            font-weight: 500;
            letter-spacing: -0.01em;
        }

        /* 커리어 순위 섹션 */
        .ranking-section {
            margin-bottom: clamp(10px, 3vw, 20px);
        }

        .ranking-card {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.15);
            border-radius: 16px;
            padding: clamp(16px, 4vw, 20px);
            backdrop-filter: blur(15px);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .ranking-header {
            margin-bottom: 16px;
        }

        .ranking-title {
            color: rgba(255, 255, 255, 0.95);
            font-size: clamp(0.8rem, 3vw, 0.9rem);
            font-weight: 600;
            letter-spacing: -0.01em;
            margin-bottom: 4px;
        }

        .ranking-subtitle {
            color: rgba(255, 255, 255, 0.7);
            font-size: clamp(0.7rem, 2.5vw, 0.75rem);
            font-weight: 400;
        }

        .ranking-list {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .ranking-item {
            display: flex;
            align-items: center;
            padding: 12px 16px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            transition: all 0.2s ease;
        }

        .ranking-item:hover {
            background: rgba(255, 255, 255, 0.08);
            transform: translateY(-1px);
        }

        .ranking-medal {
            width: clamp(24px, 6vw, 28px);
            height: clamp(24px, 6vw, 28px);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 12px;
            font-size: clamp(1rem, 4vw, 1.2rem);
            flex-shrink: 0;
        }

        .ranking-info {
            flex: 1;
            min-width: 0;
        }

        .ranking-user {
            font-size: clamp(0.8rem, 3vw, 0.85rem);
            font-weight: 600;
            color: rgba(255, 255, 255, 0.95);
            margin-bottom: 4px;
            letter-spacing: -0.01em;
        }

        .ranking-message {
            font-size: clamp(0.7rem, 2.5vw, 0.75rem);
            color: rgba(255, 255, 255, 0.7);
            line-height: 1.3;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .ranking-score {
            font-size: clamp(1.1rem, 4vw, 1.3rem);
            font-weight: 700;
            color: rgba(255, 255, 255, 0.95);
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            flex-shrink: 0;
        }

        .ranking-empty {
            text-align: center;
            padding: 20px;
            color: rgba(255, 255, 255, 0.7);
            font-size: clamp(0.75rem, 3vw, 0.8rem);
            line-height: 1.5;
        }
        .analysis-button {
            position: absolute;
            top: 0;
            right: 0;
            width: clamp(24px, 6vw, 28px);
            height: clamp(24px, 6vw, 28px);
            background: rgba(255, 255, 255, 0.15);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            touch-action: manipulation;
        }

        .analysis-button:hover {
            background: rgba(255, 255, 255, 0.25);
            border-color: rgba(255, 255, 255, 0.5);
            transform: scale(1.1);
        }

        .analysis-button:active {
            transform: scale(0.95);
        }

        .analysis-button::before {
            content: '↻';
            color: rgba(255, 255, 255, 0.9);
            font-size: clamp(0.9rem, 3.5vw, 1.1rem);
            font-weight: 700;
            line-height: 1;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-4px);
            }
            60% {
                transform: translateY(-2px);
            }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* 로딩 오버레이 */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(10px);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            z-index: 2000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .loading-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .loading-content {
            text-align: center;
            color: white;
        }

        .loading-logo {
            font-size: clamp(2rem, 8vw, 3rem);
            font-weight: 700;
            color: rgba(255, 255, 255, 0.95);
            letter-spacing: -0.02em;
            margin-bottom: 20px;
            text-shadow: 0 2px 10px rgba(255, 255, 255, 0.2);
        }

        .loading-spinner {
            width: clamp(40px, 10vw, 60px);
            height: clamp(40px, 10vw, 60px);
            border: 3px solid rgba(255, 255, 255, 0.2);
            border-top: 3px solid rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 24px;
        }

        .loading-message {
            font-size: clamp(0.9rem, 3.5vw, 1.1rem);
            font-weight: 600;
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 8px;
            letter-spacing: -0.01em;
            transition: opacity 0.5s ease-in-out;
            opacity: 1;
        }

        .loading-message.fade-out {
            opacity: 0;
        }

        .loading-submessage {
            font-size: clamp(0.75rem, 3vw, 0.85rem);
            color: rgba(255, 255, 255, 0.7);
            font-weight: 400;
        }

        @keyframes fadeInOut {
            0%, 100% { opacity: 0.7; }
            50% { opacity: 1; }
        }

        /* 모달 스타일 */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            padding: 20px;
            padding-top: max(20px, env(safe-area-inset-top));
            padding-bottom: max(20px, env(safe-area-inset-bottom));
        }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .modal-content {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: clamp(20px, 5vw, 24px);
            max-width: calc(100vw - 40px);
            width: 100%;
            max-width: 420px;
            max-height: calc(100vh - 40px);
            max-height: calc(100dvh - 40px);
            overflow-y: auto;
            backdrop-filter: blur(20px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            transform: translateY(30px) scale(0.9);
            transition: all 0.3s ease;
            position: relative;
        }

        .modal-overlay.active .modal-content {
            transform: translateY(0) scale(1);
        }

        .modal-close {
            position: absolute;
            top: 16px;
            right: 16px;
            width: clamp(28px, 7vw, 32px);
            height: clamp(28px, 7vw, 32px);
            border: none;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
            touch-action: manipulation;
        }

        .modal-close:hover {
            background: rgba(0, 0, 0, 0.15);
            transform: scale(1.1);
        }

        .modal-close::before {
            content: '×';
            font-size: clamp(16px, 4vw, 18px);
            color: rgba(0, 0, 0, 0.6);
            font-weight: 300;
        }

        .modal-header {
            margin-bottom: 20px;
            padding-right: 40px;
        }

        .modal-title {
            font-size: clamp(1.1rem, 4vw, 1.2rem);
            font-weight: 700;
            color: rgba(0, 0, 0, 0.9);
            margin-bottom: 8px;
            letter-spacing: -0.02em;
            word-break: keep-all;
        }

        .modal-subtitle {
            font-size: clamp(0.75rem, 3vw, 0.8rem);
            color: rgba(0, 0, 0, 0.6);
            font-weight: 500;
        }

        .company-info {
            margin-bottom: 24px;
        }

        .info-item {
            display: flex;
            align-items: flex-start;
            margin-bottom: 12px;
            padding: 12px;
            background: rgba(102, 126, 234, 0.08);
            border-radius: 10px;
            border-left: 3px solid rgba(102, 126, 234, 0.3);
        }

        .info-item:last-child {
            margin-bottom: 0;
        }

        .info-label {
            font-size: clamp(0.7rem, 2.5vw, 0.75rem);
            font-weight: 600;
            color: rgba(102, 126, 234, 0.8);
            min-width: clamp(50px, 15vw, 60px);
            margin-right: 8px;
            text-transform: uppercase;
            letter-spacing: 0.02em;
            flex-shrink: 0;
        }

        .info-value {
            font-size: clamp(0.8rem, 3vw, 0.85rem);
            color: rgba(0, 0, 0, 0.8);
            line-height: 1.4;
            font-weight: 500;
            word-break: keep-all;
        }

        /* 자소서 지문 섹션 */
        .essay-section {
            margin-bottom: 24px;
        }

        .essay-section-title {
            font-size: clamp(0.85rem, 3.5vw, 0.9rem);
            font-weight: 600;
            color: rgba(0, 0, 0, 0.9);
            margin-bottom: 16px;
            letter-spacing: -0.01em;
        }

        .essay-question {
            margin-bottom: 16px;
        }

        .essay-question:last-child {
            margin-bottom: 0;
        }

        .question-label {
            display: block;
            font-size: clamp(0.75rem, 3vw, 0.8rem);
            font-weight: 600;
            color: rgba(0, 0, 0, 0.8);
            margin-bottom: 8px;
            letter-spacing: -0.01em;
        }

        .question-textarea {
            width: 100%;
            min-height: clamp(60px, 15vw, 80px);
            padding: 12px;
            border: 1px solid rgba(102, 126, 234, 0.2);
            border-radius: 8px;
            font-size: clamp(0.75rem, 3vw, 0.8rem);
            font-family: inherit;
            color: rgba(0, 0, 0, 0.8);
            background: rgba(102, 126, 234, 0.03);
            resize: vertical;
            transition: all 0.2s ease;
        }

        .question-textarea:focus {
            outline: none;
            border-color: rgba(102, 126, 234, 0.5);
            background: rgba(102, 126, 234, 0.08);
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .question-textarea::placeholder {
            color: rgba(0, 0, 0, 0.4);
            font-size: clamp(0.7rem, 2.5vw, 0.75rem);
        }

        .modal-actions {
            display: flex;
            gap: 8px;
            margin-top: 24px;
        }

        .btn {
            flex: 1;
            padding: clamp(10px, 3vw, 12px) clamp(16px, 4vw, 20px);
            border: none;
            border-radius: 10px;
            font-size: clamp(0.8rem, 3vw, 0.85rem);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            letter-spacing: -0.01em;
            touch-action: manipulation;
            min-height: 44px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: rgba(0, 0, 0, 0.05);
            color: rgba(0, 0, 0, 0.7);
            border: 1px solid rgba(0, 0, 0, 0.1);
        }

        .btn-secondary:hover {
            background: rgba(0, 0, 0, 0.08);
            transform: translateY(-1px);
        }

        /* 하단 네비게이션 */
        .bottom-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(255, 255, 255, 0.12);
            backdrop-filter: blur(20px);
            border-top: 1px solid rgba(255, 255, 255, 0.15);
            padding: 8px 0 6px 0;
            padding-bottom: max(6px, env(safe-area-inset-bottom));
            z-index: 100;
            height: clamp(60px, 15vw, 70px);
        }

        .nav-container {
            max-width: 100%;
            margin: 0 auto;
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
            align-items: center;
            justify-items: center;
            height: 100%;
            padding: 0 16px;
            position: relative;
        }

        .nav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 2px;
            padding: 4px clamp(8px, 2vw, 12px);
            cursor: pointer;
            transition: all 0.2s ease;
            border-radius: 8px;
            text-decoration: none;
            min-width: clamp(40px, 10vw, 44px);
            touch-action: manipulation;
            width: 100%;
            justify-self: center;
        }

        .nav-item:hover {
            background: rgba(255, 255, 255, 0.08);
        }

        .nav-item.active {
            background: rgba(255, 255, 255, 0.15);
        }

        .nav-icon {
            width: clamp(20px, 5vw, 24px);
            height: clamp(20px, 5vw, 24px);
            position: relative;
            transition: all 0.2s ease;
        }

        /* 메인 자소서 버튼 */
        .main-button {
            grid-column: 3;
            justify-self: center;
            align-self: center;
            width: clamp(60px, 15vw, 70px);
            height: clamp(60px, 15vw, 70px);
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
            touch-action: manipulation;
            z-index: 10;
            margin-top: -10px;
        }

        .main-button:hover {
            transform: scale(1.05);
            box-shadow: 0 12px 35px rgba(102, 126, 234, 0.5);
        }

        .main-button:active {
            transform: scale(0.95);
        }

        .main-button::before {
            content: '✍️';
            font-size: clamp(20px, 5vw, 24px);
            margin-bottom: 2px;
        }

        .main-button-text {
            font-size: clamp(0.5rem, 2vw, 0.6rem);
            color: white;
            font-weight: 600;
            letter-spacing: -0.01em;
        }

        /* 말풍선 알림 */
        .bubble-notification {
            position: absolute;
            top: -45px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(255, 255, 255, 0.95);
            color: rgba(102, 126, 234, 0.9);
            padding: 8px 12px;
            border-radius: 12px;
            font-size: clamp(0.65rem, 2.5vw, 0.7rem);
            font-weight: 600;
            white-space: nowrap;
            animation: bubbleBounce 2s ease-in-out infinite;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            backdrop-filter: blur(10px);
        }

        .bubble-notification::after {
            content: '';
            position: absolute;
            bottom: -6px;
            left: 50%;
            transform: translateX(-50%);
            width: 0;
            height: 0;
            border-left: 6px solid transparent;
            border-right: 6px solid transparent;
            border-top: 6px solid rgba(255, 255, 255, 0.95);
        }

        @keyframes bubbleBounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateX(-50%) translateY(0);
            }
            40% {
                transform: translateX(-50%) translateY(-3px);
            }
            60% {
                transform: translateX(-50%) translateY(-1px);
            }
        }

        /* 홈 아이콘 (심플한 원형) */
        .nav-icon.home::before {
            content: '';
            position: absolute;
            top: 6px;
            left: 4px;
            width: 12px;
            height: 12px;
            border: 2px solid rgba(255, 255, 255, 0.7);
            border-radius: 50%;
        }

        .nav-icon.home::after {
            content: '';
            position: absolute;
            top: 10px;
            left: 16px;
            width: 4px;
            height: 4px;
            background: rgba(255, 255, 255, 0.7);
            border-radius: 50%;
        }

        .nav-item.active .nav-icon.home::before {
            border-color: rgba(255, 255, 255, 0.95);
        }

        .nav-item.active .nav-icon.home::after {
            background: rgba(255, 255, 255, 0.95);
        }

        /* 검색 아이콘 */
        .nav-icon.search::before {
            content: '';
            position: absolute;
            top: 5px;
            left: 4px;
            width: 10px;
            height: 10px;
            border: 2px solid rgba(255, 255, 255, 0.7);
            border-radius: 50%;
        }

        .nav-icon.search::after {
            content: '';
            position: absolute;
            top: 16px;
            left: 16px;
            width: 5px;
            height: 2px;
            background: rgba(255, 255, 255, 0.7);
            transform: rotate(45deg);
        }

        .nav-item.active .nav-icon.search::before {
            border-color: rgba(255, 255, 255, 0.95);
        }

        .nav-item.active .nav-icon.search::after {
            background: rgba(255, 255, 255, 0.95);
        }

        /* 커리어 아이콘 */
        .nav-icon.career::before {
            content: '';
            position: absolute;
            top: 3px;
            left: 4px;
            width: 10px;
            height: 14px;
            border: 2px solid rgba(255, 255, 255, 0.7);
            border-radius: 1px;
        }

        .nav-icon.career::after {
            content: '';
            position: absolute;
            top: 8px;
            left: 9px;
            width: 6px;
            height: 1px;
            background: rgba(255, 255, 255, 0.7);
            box-shadow:
                0 2px 0 rgba(255, 255, 255, 0.7),
                0 4px 0 rgba(255, 255, 255, 0.7);
        }

        .nav-item.active .nav-icon.career::before {
            border-color: rgba(255, 255, 255, 0.95);
        }

        .nav-item.active .nav-icon.career::after {
            background: rgba(255, 255, 255, 0.95);
            box-shadow:
                0 2px 0 rgba(255, 255, 255, 0.95),
                0 4px 0 rgba(255, 255, 255, 0.95);
        }

        /* 프로필 아이콘 */
        .nav-icon.profile::before {
            content: '';
            position: absolute;
            top: 4px;
            left: 9px;
            width: 6px;
            height: 6px;
            border: 2px solid rgba(255, 255, 255, 0.7);
            border-radius: 50%;
        }

        .nav-icon.profile::after {
            content: '';
            position: absolute;
            top: 11px;
            left: 3px;
            width: 12px;
            height: 8px;
            border: 2px solid rgba(255, 255, 255, 0.7);
            border-top: none;
            border-radius: 0 0 6px 6px;
        }

        .nav-item.active .nav-icon.profile::before,
        .nav-item.active .nav-icon.profile::after {
            border-color: rgba(255, 255, 255, 0.95);
        }

        .nav-label {
            color: rgba(255, 255, 255, 0.7);
            font-size: clamp(0.6rem, 2.5vw, 0.65rem);
            font-weight: 500;
            letter-spacing: -0.01em;
        }

        .nav-item.active .nav-label {
            color: rgba(255, 255, 255, 0.95);
        }

        /* 배경 파티클 효과 */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .particle {
            position: absolute;
            width: 2px;
            height: 2px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 8s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% {
                transform: translateY(0px) rotate(0deg);
                opacity: 0.1;
            }
            50% {
                transform: translateY(-12px) rotate(180deg);
                opacity: 0.25;
            }
        }

        /* 스크롤 그라데이션 힌트 */
        .companies-grid::after {
            content: '';
            position: absolute;
            right: 0;
            top: 0;
            width: 30px;
            height: 100%;
            background: linear-gradient(to left, rgba(102, 126, 234, 0.4), transparent);
            pointer-events: none;
            z-index: 10;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .companies-grid.scrolling::after {
            opacity: 1;
        }

        /* 작은 모바일 화면 대응 */
        @media (max-width: 375px) {
            .main-container {
                padding: 12px;
            }

            .company-item {
                flex: 0 0 65px;
                height: 65px;
            }

            .company-placeholder {
                font-size: 0.65rem;
                padding: 4px;
            }

            .modal-overlay {
                padding: 12px;
            }

            .nav-item {
                padding: 4px 6px;
                min-width: 36px;
            }
        }

        /* 매우 작은 화면 대응 */
        @media (max-width: 320px) {
            .main-container {
                padding: 10px;
            }

            .company-item {
                flex: 0 0 60px;
                height: 60px;
            }

            .company-placeholder {
                font-size: 0.6rem;
            }

            .modal-overlay {
                padding: 8px;
            }
        }

        /* 큰 모바일/태블릿 대응 */
        @media (min-width: 768px) {
            .main-container {
                max-width: 500px;
                padding: 24px;
            }

            .nav-container {
                max-width: 500px;
            }
        }

        /* 접근성 개선 */
        @media (prefers-reduced-motion: reduce) {
            *, *::before, *::after {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }

        /* iOS Safari 특화 */
        @supports (-webkit-touch-callout: none) {
            body {
                min-height: -webkit-fill-available;
            }

            .modal-content {
                max-height: -webkit-fill-available;
            }
        }
    </style>
</head>
<body>
<!-- 배경 파티클 -->
<div class="particles" id="particles"></div>

<!-- 로딩 오버레이 -->
<div class="loading-overlay" id="loadingOverlay">
    <div class="loading-content">
        <div class="loading-logo">JGenie</div>
        <div class="loading-spinner"></div>
        <div class="loading-message" id="loadingMessage">JGenie가 자기소개서를 작성중이에요!</div>
        <div class="loading-submessage">조금만 기다려주세요</div>
    </div>
</div>

<!-- 메인 컨테이너 -->
<div class="main-container">
    <!-- 헤더 -->
    <header class="header">
        <h1 class="logo">JGenie</h1>
        <p class="welcome-text">자소서, 이제 고민하지 마세요<br>AI가 기업별 맞춤형 자소서를 만들어드려요</p>
    </header>

    <!-- 기업 목록 섹션 -->
    <section class="companies-section">
        <h2 class="section-title">등록된 기업</h2>
        <div class="companies-grid" id="companiesGrid">
            <div class="companies-container" id="companiesContainer">
                <div class="company-row" id="companyRow1"></div>
                <div class="company-row" id="companyRow2"></div>
            </div>
        </div>
    </section>

    <!-- AI 분석 섹션 -->
    <section class="analysis-section">
        <h2 class="section-title">AI 커리어 분석</h2>
        <div class="analysis-card">
            <div class="analysis-header">
                <button class="analysis-button" id="analysisBtn"></button>
                <h3 class="analysis-title">맞춤 분석 결과</h3>
                <p class="analysis-subtitle">커리어 강점 및 개선점 분석</p>
            </div>
            <div class="analysis-placeholder" id="analysisPlaceholder">
                <p class="analysis-placeholder-text">
                    커리어 정보를 등록하시면<br>
                    AI가 당신의 강점과 개선점을<br>
                    자세히 분석해드립니다
                </p>
            </div>
            <div class="analysis-loading" id="analysisLoading">
                <div class="analysis-loading-spinner"></div>
                <p class="analysis-loading-text">생성중...</p>
            </div>
            <div class="analysis-result" id="analysisResult">
                <div class="analysis-score">
                    <div class="score-circle" id="scoreCircle">
                        <span class="score-value" id="scoreValue">0</span>
                    </div>
                </div>
                <div class="analysis-message" id="analysisMessage"></div>
            </div>
        </div>
    </section>

    <!-- 커리어 순위 섹션 -->
    <section class="ranking-section">
        <h2 class="section-title">커리어 순위</h2>
        <div class="ranking-card">
            <div class="ranking-header">
                <h3 class="ranking-title">전체 사용자 순위</h3>
                <p class="ranking-subtitle">AI 평가 점수 기준 상위 랭킹</p>
            </div>
            <div class="ranking-list" id="rankingList">
                <div class="ranking-empty">
                    순위 데이터를 불러오는 중입니다...
                </div>
            </div>
        </div>
    </section>
</div>

<!-- 기업 정보 모달 -->
<div class="modal-overlay" id="companyModal">
    <div class="modal-content">
        <button class="modal-close" id="modalClose"></button>
        <div class="modal-header">
            <h2 class="modal-title" id="modalCompanyName">기업명</h2>
            <p class="modal-subtitle">AI 자기소개서 작성</p>
        </div>
        <div class="company-info">
            <div class="info-item">
                <span class="info-label">기업유형</span>
                <span class="info-value" id="modalCompanyType">-</span>
            </div>
            <div class="info-item">
                <span class="info-label">산업분야</span>
                <span class="info-value" id="modalIndustryType">-</span>
            </div>
            <div class="info-item">
                <span class="info-label">인재상</span>
                <span class="info-value" id="modalTalentProfile">-</span>
            </div>
        </div>

        <!-- 자소서 지문 섹션 -->
        <form id="coverletterForm" action="/coverletter" method="POST">
            <input type="hidden" name="companyName" id="formCompanyName">
            <input type="hidden" name="companyType" id="formCompanyType">
            <input type="hidden" name="industryType" id="formIndustryType">
            <input type="hidden" name="talentProfile" id="formTalentProfile">

            <div class="essay-section">
                <h3 class="essay-section-title">자기소개서 질문</h3>

                <div class="essay-question">
                    <label class="question-label" for="question1">질문 1</label>
                    <textarea
                            class="question-textarea"
                            id="question1"
                            name="question1"
                            placeholder="첫 번째 자기소개서 질문을 작성해주세요. (예: 본인의 성장과정과 가치관을 중심으로 자기소개를 해주세요.)"
                            required></textarea>
                </div>

                <div class="essay-question">
                    <label class="question-label" for="question2">질문 2</label>
                    <textarea
                            class="question-textarea"
                            id="question2"
                            name="question2"
                            placeholder="두 번째 자기소개서 질문을 작성해주세요. (예: 지원하게 된 동기와 입사 후 포부에 대해 작성해주세요.)"
                            required></textarea>
                </div>

                <div class="essay-question">
                    <label class="question-label" for="question3">질문 3</label>
                    <textarea
                            class="question-textarea"
                            id="question3"
                            name="question3"
                            placeholder="세 번째 자기소개서 질문을 작성해주세요. (예: 본인의 역량과 관련 경험에 대해 구체적으로 작성해주세요.)"
                            required></textarea>
                </div>
            </div>

            <div class="modal-actions">
                <button type="button" class="btn btn-secondary" id="modalCancel">취소</button>
                <button type="submit" class="btn btn-primary" id="modalWrite">자기소개서 작성</button>
            </div>
        </form>
    </div>
</div>

<!-- 하단 네비게이션 -->
<nav class="bottom-nav">
    <div class="nav-container">
        <a href="/main/home" class="nav-item active">
            <div class="nav-icon home"></div>
            <span class="nav-label">홈</span>
        </a>
        <a href="/main/search" class="nav-item">
            <div class="nav-icon search"></div>
            <span class="nav-label">검색</span>
        </a>

        <!-- 메인 자소서 버튼 -->
        <button class="main-button" id="mainButton">
            <div class="bubble-notification">여기서 확인하세요!</div>
            <span class="main-button-text">자소서</span>
        </button>

        <a href="/main/career" class="nav-item">
            <div class="nav-icon career"></div>
            <span class="nav-label">커리어</span>
        </a>
        <a href="/main/profile" class="nav-item">
            <div class="nav-icon profile"></div>
            <span class="nav-label">프로필</span>
        </a>
    </div>
</nav>

<script>
    // 전역 변수
    let companiesData = [];
    let selectedCompany = null;

    // 로딩 메시지 배열
    const loadingMessages = [
        'JGenie가 자기소개서를 작성중이에요!',
        '사용자님의 커리어를 검토중이에요!',
        '조금만 기다려주세요!',
        '맞춤형 자기소개서를 준비하고 있어요!'
    ];

    let loadingMessageIndex = 0;
    let loadingMessageInterval;

    // 로딩 화면 표시
    function showLoading() {
        const loadingOverlay = document.getElementById('loadingOverlay');
        const loadingMessage = document.getElementById('loadingMessage');

        loadingOverlay.classList.add('active');
        document.body.style.overflow = 'hidden';

        // 부드러운 메시지 순환 표시
        loadingMessageInterval = setInterval(() => {
            // 페이드 아웃
            loadingMessage.classList.add('fade-out');

            setTimeout(() => {
                // 메시지 변경
                loadingMessageIndex = (loadingMessageIndex + 1) % loadingMessages.length;
                loadingMessage.textContent = loadingMessages[loadingMessageIndex];

                // 페이드 인
                loadingMessage.classList.remove('fade-out');
            }, 500); // 페이드 아웃 완료 후 메시지 변경
        }, 3500); // 3.5초마다 메시지 변경 (이전 2초에서 증가)
    }

    // 로딩 화면 숨기기
    function hideLoading() {
        const loadingOverlay = document.getElementById('loadingOverlay');
        loadingOverlay.classList.remove('active');
        document.body.style.overflow = '';

        if (loadingMessageInterval) {
            clearInterval(loadingMessageInterval);
        }
    }

    // 분석 로딩 표시
    function showAnalysisLoading() {
        document.getElementById('analysisPlaceholder').style.display = 'none';
        document.getElementById('analysisResult').classList.remove('show');
        document.getElementById('analysisLoading').classList.add('show');
    }

    // 분석 결과 표시
    function showAnalysisResult(data) {
        const { evaluationMessage, evaluationScore } = data;

        // 점수 표시
        document.getElementById('scoreValue').textContent = evaluationScore;

        // 진행률 계산 (0-100 점수를 0-360도로 변환)
        const progress = (evaluationScore / 100) * 360;
        document.getElementById('scoreCircle').style.setProperty('--progress', progress + 'deg');

        // 메시지 표시
        document.getElementById('analysisMessage').textContent = evaluationMessage;

        // UI 상태 변경
        document.getElementById('analysisLoading').classList.remove('show');
        document.getElementById('analysisResult').classList.add('show');
    }

    // 분석 오류 표시
    function showAnalysisError() {
        document.getElementById('analysisLoading').classList.remove('show');
        document.getElementById('analysisPlaceholder').style.display = 'block';
        alert('커리어 분석 중 오류가 발생했습니다. 다시 시도해주세요.');
    }

    // 배경 파티클 생성
    function createParticles() {
        const particlesContainer = document.getElementById('particles');
        const particleCount = 10;

        for (let i = 0; i < particleCount; i++) {
            const particle = document.createElement('div');
            particle.classList.add('particle');

            particle.style.top = Math.random() * 100 + '%';
            particle.style.left = Math.random() * 100 + '%';
            particle.style.animationDelay = Math.random() * 8 + 's';
            particle.style.animationDuration = (6 + Math.random() * 4) + 's';

            particlesContainer.appendChild(particle);
        }
    }

    // API에서 기업 데이터 가져오기
    async function fetchCompaniesData() {
        try {
            const response = await fetch('/companies');
            if (!response.ok) {
                throw new Error('기업 데이터를 불러올 수 없습니다.');
            }
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('API 호출 오류:', error);
            throw error;
        }
    }

    // 기업 데이터 렌더링 및 스크롤 처리
    function renderCompanies(companies) {
        companiesData = companies;
        const row1 = document.getElementById('companyRow1');
        const row2 = document.getElementById('companyRow2');
        const companiesContainer = document.getElementById('companiesContainer');
        const companiesGrid = document.getElementById('companiesGrid');

        // 데이터를 2줄로 나누기
        const midPoint = Math.ceil(companies.length / 2);
        const firstRowData = companies.slice(0, midPoint);
        const secondRowData = companies.slice(midPoint);

        // 첫 번째 줄 렌더링
        renderRow(row1, firstRowData);
        // 두 번째 줄 렌더링
        renderRow(row2, secondRowData);

        // 스크롤 필요성 확인 및 적용
        checkAndApplyScroll(row1, companiesContainer, companiesGrid);
    }

    function renderRow(rowElement, data) {
        rowElement.innerHTML = '';

        // 원본 데이터 렌더링
        data.forEach(company => {
            const item = document.createElement('div');
            item.className = 'company-item';
            item.innerHTML = `<div class="company-placeholder">${company.companyName}</div>`;
            item.addEventListener('click', () => {
                openCompanyModal(company);
            });
            rowElement.appendChild(item);
        });
    }

    function checkAndApplyScroll(sampleRow, container, grid) {
        const containerWidth = container.parentElement.offsetWidth;
        const rowWidth = sampleRow.scrollWidth;

        // 요소가 화면을 넘치는 경우에만 스크롤 적용
        if (rowWidth > containerWidth) {
            // 무한 스크롤을 위해 복제본 추가
            const rows = container.querySelectorAll('.company-row');
            rows.forEach(row => {
                const originalItems = Array.from(row.children);
                originalItems.forEach(item => {
                    const clone = item.cloneNode(true);
                    const companyName = clone.querySelector('.company-placeholder').textContent;
                    const company = companiesData.find(c => c.companyName === companyName);
                    clone.addEventListener('click', () => {
                        openCompanyModal(company);
                    });
                    row.appendChild(clone);
                });
            });

            // 스크롤 애니메이션 적용
            container.classList.add('scrolling');
            grid.classList.add('scrolling');

            // 사용자 상호작용 이벤트 적용
            applyUserInteraction(container, grid);
        }
    }

    function applyUserInteraction(container, grid) {
        let resumeTimeout;

        // 터치/마우스 이벤트 리스너
        grid.addEventListener('mouseenter', () => pauseAutoScroll(container));
        grid.addEventListener('mouseleave', () => resumeAutoScroll(container));
        grid.addEventListener('touchstart', () => pauseAutoScroll(container));
        grid.addEventListener('touchend', () => {
            clearTimeout(resumeTimeout);
            resumeTimeout = setTimeout(() => resumeAutoScroll(container), 2000);
        });

        function pauseAutoScroll(container) {
            container.style.animationPlayState = 'paused';
        }

        function resumeAutoScroll(container) {
            container.style.animationPlayState = 'running';
        }
    }

    // 기업 모달 열기
    function openCompanyModal(company) {
        selectedCompany = company;

        // 모달 데이터 설정
        document.getElementById('modalCompanyName').textContent = company.companyName;
        document.getElementById('modalCompanyType').textContent = company.companyType;
        document.getElementById('modalIndustryType').textContent = company.industryType;
        document.getElementById('modalTalentProfile').textContent = company.talentProfile;

        // 폼 숨겨진 필드 설정
        document.getElementById('formCompanyName').value = company.companyName;
        document.getElementById('formCompanyType').value = company.companyType;
        document.getElementById('formIndustryType').value = company.industryType;
        document.getElementById('formTalentProfile').value = company.talentProfile;

        // 모달 표시
        const modal = document.getElementById('companyModal');
        modal.classList.add('active');
        document.body.style.overflow = 'hidden';
    }

    // 모달 닫기
    function closeCompanyModal() {
        const modal = document.getElementById('companyModal');
        modal.classList.remove('active');
        document.body.style.overflow = '';
        selectedCompany = null;

        // 폼 초기화
        document.getElementById('coverletterForm').reset();
    }

    // 분석 버튼 클릭 이벤트
    const analysisBtn = document.getElementById('analysisBtn');
    let isAnalysisLoading = false;

    if (analysisBtn) {
        analysisBtn.addEventListener('click', async function() {
            // 이미 로딩 중이면 요청 무시
            if (isAnalysisLoading) return;

            this.style.transform = 'scale(0.9)';
            setTimeout(() => {
                this.style.transform = '';
            }, 150);

            // 로딩 상태로 변경
            isAnalysisLoading = true;
            showAnalysisLoading();

            try {
                const response = await fetch('/career/evaluation', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                if (!response.ok) {
                    throw new Error('평가 데이터를 불러올 수 없습니다.');
                }

                const data = await response.json();
                showAnalysisResult(data);

                // 커리어 순위도 다시 로드
                loadCareerRanking();

            } catch (error) {
                console.error('AI 분석 오류:', error);
                showAnalysisError();
            } finally {
                // 로딩 상태 해제
                isAnalysisLoading = false;
            }
        });
    }

    // 메인 자소서 버튼 클릭 이벤트
    const mainButton = document.getElementById('mainButton');
    if (mainButton) {
        mainButton.addEventListener('click', function() {
            window.location.href = '/coverletter';
        });
    }

    // 모달 이벤트 리스너
    document.getElementById('modalClose').addEventListener('click', closeCompanyModal);
    document.getElementById('modalCancel').addEventListener('click', closeCompanyModal);

    // 모달 외부 클릭시 닫기
    document.getElementById('companyModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeCompanyModal();
        }
    });

    // 자기소개서 폼 제출 이벤트
    document.getElementById('coverletterForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(this);

        // 모달 닫기
        closeCompanyModal();

        // 로딩 화면 표시
        showLoading();

        try {
            // /coverletter/ai로 POST 요청
            const response = await fetch('/coverletter/ai', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    companyName: formData.get('companyName'),
                    companyType: formData.get('companyType'),
                    industryType: formData.get('industryType'),
                    talentProfile: formData.get('talentProfile'),
                    question1: formData.get('question1'),
                    question2: formData.get('question2'),
                    question3: formData.get('question3')
                })
            });

            if (!response.ok) {
                throw new Error('AI 분석 요청 실패');
            }

            // AI 응답을 받은 후 /coverletter로 이동
            window.location.href = '/coverletter';

        } catch (error) {
            console.error('AI 분석 오류:', error);
            hideLoading(); // 로딩 화면 숨기기
            alert('AI 분석 중 오류가 발생했습니다. 다시 시도해주세요.');
        }
    });

    // 네비게이션 아이템 클릭 이벤트
    document.querySelectorAll('.nav-item').forEach(item => {
        item.addEventListener('click', function(e) {
            if (this.classList.contains('active')) {
                e.preventDefault();
                return;
            }

            document.querySelectorAll('.nav-item').forEach(nav => nav.classList.remove('active'));
            this.classList.add('active');
        });
    });

    // 커리어 순위 데이터 로드
    async function loadCareerRanking() {
        try {
            const response = await fetch('/career/evaluation/search/all/score', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (response.ok) {
                const data = await response.json();
                renderRanking(data);
            } else {
                showRankingEmpty('순위 데이터를 불러올 수 없습니다.');
            }
        } catch (error) {
            console.error('순위 데이터 로드 실패:', error);
            showRankingEmpty('순위 데이터를 불러오는 중 오류가 발생했습니다.');
        }
    }

    // 순위 데이터 렌더링
    function renderRanking(rankings) {
        const rankingList = document.getElementById('rankingList');

        if (!rankings || rankings.length === 0) {
            showRankingEmpty('아직 등록된 커리어 데이터가 없습니다.');
            return;
        }

        rankingList.innerHTML = '';

        // 50등까지만 표시
        const top50Rankings = rankings.slice(0, 50);

        // 순위 결정 (동점자 처리)
        let currentRank = 1;
        let prevScore = null;

        top50Rankings.forEach((user, index) => {
            if (prevScore !== null && user.evaluationScore < prevScore) {
                currentRank = index + 1;
            }

            const medal = getMedalEmoji(currentRank);

            const rankingItem = document.createElement('div');
            rankingItem.className = 'ranking-item';
            rankingItem.innerHTML = `
                <div class="ranking-medal">${medal}</div>
                <div class="ranking-info">
                    <div class="ranking-user">${user.userId}</div>
                    <div class="ranking-message">${user.evaluationMessage}</div>
                </div>
                <div class="ranking-score">${user.evaluationScore}점</div>
            `;

            rankingList.appendChild(rankingItem);
            prevScore = user.evaluationScore;
        });
    }

    // 메달 이모지 반환
    function getMedalEmoji(rank) {
        switch(rank) {
            case 1: return '🥇';
            case 2: return '🥈';
            case 3: return '🥉';
            default: return `${rank}`;
        }
    }

    // 순위 빈 상태 표시
    function showRankingEmpty(message) {
        const rankingList = document.getElementById('rankingList');
        rankingList.innerHTML = `<div class="ranking-empty">${message}</div>`;
    }

    // 초기 커리어 분석 데이터 로드
    async function loadInitialAnalysis() {
        try {
            const response = await fetch('/career/evaluation/search', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (response.ok) {
                const data = await response.json();
                if (data && data.evaluationMessage && data.evaluationScore !== undefined) {
                    showAnalysisResult(data);
                }
            }
        } catch (error) {
            console.error('초기 분석 데이터 로드 실패:', error);
            // 오류 발생해도 기본 상태 유지
        }
    }

    // 페이지 로드 시 초기화
    window.addEventListener('load', async () => {
        createParticles();

        try {
            // API에서 기업 데이터 가져와서 렌더링
            const companies = await fetchCompaniesData();
            renderCompanies(companies);
        } catch (error) {
            console.error('기업 데이터 로드 실패:', error);
            // 오류 처리 - 사용자에게 알림 표시 등
        }

        // 초기 커리어 분석 데이터 로드
        loadInitialAnalysis();

        // 커리어 순위 데이터 로드
        loadCareerRanking();
    });
</script>
</body>
</html>